var selection = context.selection;

// if nothing selected, display error
if([selection count] == 0){
	return log('nothing selected');
}

// if group selected, iterate through them
if(selection[0].className() == 'MSLayerGroup') {
	updateGroups(selection);
} else {
	updateLayers(selection, getUser());
}

function updateGroups(groups) {
	var users = getUsers(groups.count());
	for (var i=0; i < groups.count(); i++) {
		var group = groups[i];
		var user = users[i].user;
		updateLayers([group layers].array(), user);	
	}
}

function updateLayers(layers, user) {

	for (var i=0; i < layers.count(); i++) {
		var layer = layers[i];

		if(layer.className() == 'MSShapeGroup') {
			setImage(layer, user);
		} else  {
			setText(layer, user);
		}
	}

}

function getUser() {
	return getUsers(1)[0].user;
}

function getUsers(count) {
	var request = [[NSMutableURLRequest alloc] init];
	[request setHTTPMethod:@"GET"];
	var queryString = "http://api.randomuser.me?results=" + count;
	[request setURL:[NSURL URLWithString:queryString]];

	var error = [[NSError alloc] init];
	var responseCode = null;

	var oResponseData = [NSURLConnection sendSynchronousRequest:request returningResponse:responseCode error:error];

	var dataString = [[NSString alloc] initWithData:oResponseData encoding:NSUTF8StringEncoding];

	var data = JSON.parse(dataString);

	return data.results;

}

function setImage(layer, user) {
	var name = [layer name];

	if(name == 'large' || name == 'thumbnail') {
		size = name
	} else { 
		size = 'medium'
	}

	var imageURLString = user.picture[size];
	var url = [[NSURL alloc] initWithString: imageURLString];
	var image = [[NSImage alloc] initByReferencingURL:url];
	var fill = layer.style().fills().firstObject();

	layer.style().fills().firstObject().setPatternImage(image);   
	layer.style().fills().firstObject().setPatternFillType(1);
	fill.setFillType(4); 
}

function setText(layer, user) {
	var name = [layer name];
	var text;

	if(name == 'name') {
		text = user.name.first + ' ' + user.name.last;
		text = capitalize(text);
	} else if (name == 'location') {
		text = user.location.city + ', ' + user.location.state;
		text = capitalize(text);
	} else {
		text = user[[layer name]];
	}

	[layer setStringValue: text];
	[layer setName: [layer name]];
	[layer adjustFrameToFit];
}

function capitalize(s){
    return s.toLowerCase().replace( /\b./g, function(a){ return a.toUpperCase(); } );
};
